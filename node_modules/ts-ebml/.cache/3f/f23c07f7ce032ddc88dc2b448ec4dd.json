{"id":"../node_modules/ebml-block/lib/vint.js","dependencies":[{"name":"/home/legokichi/Github/ts-ebml/package.json","includedInParent":true,"mtime":1708489977088},{"name":"/home/legokichi/Github/ts-ebml/node_modules/ebml-block/package.json","includedInParent":true,"mtime":1708323464679}],"generated":{"js":"// https://github.com/themasch/node-ebml/blob/master/lib/ebml/tools.js\nmodule.exports = function (buffer, start, signed) {\n  start = start || 0\n  for (var length = 1; length <= 8; length++) {\n    if (buffer[start] >= Math.pow(2, 8 - length)) {\n      break\n    }\n  }\n  if (length > 8) {\n    throw new Error('Unrepresentable length: ' + length + ' ' +\n      buffer.toString('hex', start, start + length))\n  }\n  if (start + length > buffer.length) {\n    return null\n  }\n  var i\n  var value = buffer[start] & (1 << (8 - length)) - 1\n  for (i = 1; i < length; i++) {\n    if (i === 7) {\n      if (value >= Math.pow(2, 53 - 8) && buffer[start + 7] > 0) {\n        return {\n          length: length,\n          value: -1\n        }\n      }\n    }\n    value *= Math.pow(2, 8)\n    value += buffer[start + i]\n  }\n  if (signed) {\n    value -= Math.pow(2, length * 7 - 1) - 1\n  }\n  return {\n    length: length,\n    value: value\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/ebml-block/lib/vint.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}}],"sources":{"../node_modules/ebml-block/lib/vint.js":"// https://github.com/themasch/node-ebml/blob/master/lib/ebml/tools.js\nmodule.exports = function (buffer, start, signed) {\n  start = start || 0\n  for (var length = 1; length <= 8; length++) {\n    if (buffer[start] >= Math.pow(2, 8 - length)) {\n      break\n    }\n  }\n  if (length > 8) {\n    throw new Error('Unrepresentable length: ' + length + ' ' +\n      buffer.toString('hex', start, start + length))\n  }\n  if (start + length > buffer.length) {\n    return null\n  }\n  var i\n  var value = buffer[start] & (1 << (8 - length)) - 1\n  for (i = 1; i < length; i++) {\n    if (i === 7) {\n      if (value >= Math.pow(2, 53 - 8) && buffer[start + 7] > 0) {\n        return {\n          length: length,\n          value: -1\n        }\n      }\n    }\n    value *= Math.pow(2, 8)\n    value += buffer[start + i]\n  }\n  if (signed) {\n    value -= Math.pow(2, length * 7 - 1) - 1\n  }\n  return {\n    length: length,\n    value: value\n  }\n}\n"},"lineCount":38}},"error":null,"hash":"a77d86196ac29bf807e534da554690b8","cacheData":{"env":{}}}